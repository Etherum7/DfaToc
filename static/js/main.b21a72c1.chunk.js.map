{"version":3,"sources":["acceptor.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["state1","c","state2","state3","App","useState","value","setValue","result","setResult","handleClick","l","length","dfa","i","isAccepted","className","type","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAwBMA,EAAS,SAACC,GASd,MAPU,MAANA,EACI,EACS,MAANA,EACH,GAEC,GAOLC,EAAS,SAACD,GASd,MAPU,MAANA,EACI,EACS,MAANA,EACH,GAEC,GAOLE,EAAS,SAACF,GASd,MAPU,MAANA,EACI,EACS,MAANA,EACH,GAEC,G,eCtBIG,MAjCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAc,WACQ,ID+DJ,SAACJ,GAQzB,IANA,IAnEaL,EAmEPU,EAAIL,EAAMM,OAIZC,EAAM,EAEDC,EAAI,EAAGA,EAAIH,EAAGG,IACrB,GAAY,IAARD,EACFA,EAzEM,OAFGZ,EA2EGK,EAAMQ,IAxEd,EACS,MAANb,EACH,GAMC,OAiEA,GAAY,IAARY,EACTA,EAAMb,EAAOM,EAAMQ,SACd,GAAY,IAARD,EACTA,EAAMX,EAAOI,EAAMQ,SACd,GAAY,IAARD,EACTA,EAAMV,EAAOG,EAAMQ,QACd,IAAY,IAARD,EAGT,OAAO,EAFMP,EAAMQ,GAAnBD,GAtBS,EA2Bb,OAAY,IAARA,EACK,EAEA,ECzFHE,CAAWT,GACbG,EAAU,YAEVA,EAAU,aAGd,OACE,sBAAKO,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,8FAEgB,KAFhB,IAEsB,oCAFtB,IAEmC,oCAChC,8BAGH,uBACEC,KAAK,OACLX,MAAOA,EACPU,UAAU,QACVE,SAAU,SAACC,GACTZ,EAASY,EAAMC,OAAOd,UAE1B,wBAAQe,QAAS,kBAAMX,KAAeM,UAAU,MAAhD,mBAGA,qBAAKA,UAAU,SAAf,SAAyBR,QClBhBc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b21a72c1.chunk.js","sourcesContent":["//  Typescript program to implement DFA that accepts\n//  all Stringing which follow the language\n//  L = {a ^ n b ^ m (n)mod 2 = 0, m>= 1 }\n\n//  This function is for the dfa = starting\n//  dfa = state (zeroth) of DFA\nconst start = (c: string) => {\n  let dfa: number;\n  if (c === \"a\") {\n    dfa = 1;\n  } else if (c === \"b\") {\n    dfa = 3;\n  }\n\n  //  -1 is used to check for any\n  //  invalid symbol\n  else {\n    dfa = -1;\n  }\n  return dfa;\n};\n\n//  This function is for the first\n//  dfa = state of DFA\nconst state1 = (c: string) => {\n  let dfa: number;\n  if (c === \"a\") {\n    dfa = 2;\n  } else if (c === \"b\") {\n    dfa = 4;\n  } else {\n    dfa = -1;\n  }\n  return dfa;\n};\n\n//  This function is for the second\n//  dfa = state of DFA\nconst state2 = (c: string) => {\n  let dfa: number;\n  if (c === \"b\") {\n    dfa = 3;\n  } else if (c === \"a\") {\n    dfa = 1;\n  } else {\n    dfa = -1;\n  }\n  return dfa;\n};\n\n//  This function is for the third\n//  dfa = state of DFA\nconst state3 = (c: string) => {\n  let dfa: number;\n  if (c === \"b\") {\n    dfa = 3;\n  } else if (c === \"a\") {\n    dfa = 4;\n  } else {\n    dfa = -1;\n  }\n  return dfa;\n};\n\n//  This function is for the fourth\n//  dfa = state of DFA\nconst state4 = (c: string) => {\n  const dfa = -1;\n  return dfa;\n};\n\nexport const isAccepted = (value: string) => {\n  //  store length of String\n  const l = value.length;\n\n  //  dfa tells the number associated\n  //  with the present dfa = state\n  let dfa = 0;\n\n  for (let i = 0; i < l; i++) {\n    if (dfa === 0) {\n      dfa = start(value[i]);\n    } else if (dfa === 1) {\n      dfa = state1(value[i]);\n    } else if (dfa === 2) {\n      dfa = state2(value[i]);\n    } else if (dfa === 3) {\n      dfa = state3(value[i]);\n    } else if (dfa === 4) {\n      dfa = state4(value[i]);\n    } else {\n      return 0;\n    }\n  }\n  if (dfa === 3) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n// let String = \"aaaaaabbbb\"\n//     if (isAccepted(String)) {\n//         print(\"ACCEPTED\")   }\n//     else:\n//         print(\"NOT ACCEPTED\")\n","import React, { useState } from \"react\";\nimport { isAccepted } from \"./acceptor\";\nimport \"./App.css\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const handleClick = () => {\n    if (isAccepted(value) === 1) {\n      setResult(\"Accepted\");\n    } else {\n      setResult(\"Rejected\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"question\">\n        Input a string to check whether it is accepted by DFA which accepts\n        language L = {\"{ \"}a<sup>n</sup>b<sup>m</sup>\n        {\" | n mod 2=0, mâ‰¥1 }\"}\n      </div>\n\n      <input\n        type=\"text\"\n        value={value}\n        className=\"input\"\n        onChange={(event) => {\n          setValue(event.target.value);\n        }}></input>\n      <button onClick={() => handleClick()} className=\"btn\">\n        CHECK\n      </button>\n      <div className=\"result\">{result}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}